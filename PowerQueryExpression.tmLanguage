<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>pq</string>
		<string>PQ</string>
		<string>m</string>
		<string>M</string>
	</array>

	<key>name</key>
	<string>powerqueryexpression</string>

    <key>scopeName</key>
	<string>source.powerqueryexpression</string>

	<key>uuid</key>
	<string>41968B57-12E6-4AC5-92A4-A837010E8B0A</string>

	<key>patterns</key>
	<array>
        <dict>
            <key>include</key>
            <string>#Noise</string>
        </dict>
        <dict>
            <key>include</key>
            <string>#LiteralExpression</string>
        </dict>
        <dict>
            <key>include</key>
            <string>#Keywords</string>
        </dict>
        <dict>
            <key>include</key>
            <string>#BuiltInFunctions</string>
        </dict>
        <dict>
            <key>include</key>
            <string>#ImplicitVariable</string>
        </dict>
        <dict>
            <key>include</key>
            <string>#IntrinsicVariable</string>
        </dict>
        <dict>
            <key>include</key>
            <string>#Operators</string>
        </dict>
        <dict>
            <key>include</key>
            <string>#DotOperators</string>
        </dict>
        <dict>
            <key>include</key>
            <string>source.powerqueryexpression.stdlibrary.function</string>
        </dict>
        <dict>
            <key>include</key>
            <string>#TypeName</string>
        </dict>
        <dict>
            <key>include</key>
            <string>#RecordExpression</string>
        </dict>
        <dict>
            <key>include</key>
            <string>#Punctuation</string>
        </dict>
        <dict>
            <key>include</key>
            <string>#QuotedIdentifier</string>
        </dict>
        <dict>
            <key>include</key>
            <string>#Identifier</string>
        </dict>
	</array>

	<key>repository</key>
	<dict>

        <key>Keywords</key>
        <dict>
            <key>match</key>
            <string>\b(?:(and|or|not)|(if|then|else)|(try|error|otherwise)|(as|each|in|is|let|meta|type)|(section|shared))\b</string>
            <key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.word.logical.powerquery</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.control.conditional.powerquery</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.control.exception.powerquery</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>keyword.other.powerquery</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.keyword-in-wrong-context.powerquery</string>
				</dict>
			</dict>
        </dict>

		<key>TypeName</key>
		<dict>
			<key>match</key>
			<string>\b(?:(optional|nullable)|(any|anynonnull|binary|date|datetime|datetimezone|duration|function|list|logical|none|null|number|record|table|text|type))\b</string>
			<key>captures</key>
			<dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>storage.modifier.powerquery</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>storage.type.powerquery</string>
                </dict>
            </dict>
		</dict>

        <key>LiteralExpression</key>
        <dict>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#String</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#NumericConstant</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#LogicalConstant</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#NullConstant</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#FloatNumber</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#DecimalNumber</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#HexNumber</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#IntNumber</string>
                </dict>
            </array>
        </dict>

        <key>Noise</key>
        <dict>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>#BlockComment</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#LineComment</string>
                </dict>
                <dict>
                    <key>include</key>
                    <string>#Whitespace</string>
                </dict>
            </array>
        </dict>

        <key>Whitespace</key>
        <dict>
            <key>match</key>
            <string>\s*</string>
        </dict>

		<key>BlockComment</key>
		<dict>
			<key>begin</key>
			<string>/\*</string>
			<key>end</key>
			<string>\*/</string>
			<key>name</key>
			<string>comment.block.powerquery</string>
		</dict>

		<key>LineComment</key>
		<dict>
			<key>match</key>
			<string>//.*</string>
			<key>name</key>
			<string>comment.line.double-slash.powerquery</string>
		</dict>

		<key>String</key>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.powerquery</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"(?!")</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.powerquery</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>""</string>
					<key>name</key>
					<string>constant.character.escape.quote.powerquery</string>
				</dict>
                <dict>
                    <key>include</key>
                    <string>#EscapeSequence</string>
                </dict>
			</array>
			<key>name</key>
			<string>string.quoted.double.powerquery</string>
		</dict>

		<key>QuotedIdentifier</key>
		<dict>
			<key>begin</key>
			<string>#"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.quotedidentifier.begin.powerquery</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"(?!")</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.quotedidentifier.end.powerquery</string>
				</dict>
			</dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>""</string>
					<key>name</key>
					<string>constant.character.escape.quote.powerquery</string>
				</dict>
                <dict>
                    <key>include</key>
                    <string>#EscapeSequence</string>
                </dict>
			</array>
			<key>name</key>
			<string>entity.name.powerquery</string>
		</dict>

		<key>EscapeSequence</key>
        <dict>
            <key>begin</key>
            <string>#\(</string>
            <key>beginCaptures</key>
            <dict>
                <key>0</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.definition.escapesequence.begin.powerquery</string>
                </dict>
            </dict>
            <key>end</key>
            <string>\)</string>
            <key>endCaptures</key>
            <dict>
                <key>0</key>
                <dict>
                    <key>name</key>
                    <string>punctuation.definition.escapesequence.end.powerquery</string>
                </dict>
            </dict>
            <key>patterns</key>
            <array>
                <dict>
                    <key>match</key>
                    <string>(#|\h{4}|\h{8}|cr|lf|tab)(?:,(#|\h{4}|\h{8}|cr|lf|tab))*</string>
                </dict>
                <dict>
                    <key>match</key>
                    <string>[^\)]</string>
                    <key>name</key>
                    <string>invalid.illegal.escapesequence.powerquery</string>
                </dict>
            </array>
            <key>name</key>
            <string>constant.character.escapesequence.powerquery</string>
        </dict>

		<key>LogicalConstant</key>
		<dict>
			<key>match</key>
			<string>\b(true|false)\b</string>
			<key>name</key>
			<string>constant.language.logical.powerquery</string>
		</dict>

		<key>NullConstant</key>
		<dict>
			<key>match</key>
			<string>\b(null)\b</string>
			<key>name</key>
			<string>constant.language.null.powerquery</string>
		</dict>

		<key>NumericConstant</key>
		<dict>
			<key>match</key>
			<string>(?&lt;![\d\w])(#infinity|#nan)\b</string>
			<key>captures</key>
			<dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>constant.language.numeric.float.powerquery</string>
                </dict>
            </dict>
		</dict>

		<key>HexNumber</key>
		<dict>
			<key>match</key>
			<string>0(x|X)\h+</string>
            <key>name</key>
            <string>constant.numeric.integer.hexadecimal.powerquery</string>
		</dict>

		<key>IntNumber</key>
		<dict>
			<key>match</key>
			<string>\b(\d+)\b</string>
			<key>captures</key>
			<dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>constant.numeric.integer.powerquery</string>
                </dict>
            </dict>
		</dict>

		<key>DecimalNumber</key>
		<dict>
			<key>match</key>
			<string>(?&lt;![\d\w])(\d*\.\d+)\b</string>
            <key>name</key>
            <string>constant.numeric.decimal.powerquery</string>
		</dict>

		<key>FloatNumber</key>
		<dict>
			<key>match</key>
			<string>(\d*\.)?\d+(e|E)(\+|-)?\d+</string>     
            <key>name</key>
            <string>constant.numeric.float.powerquery</string>
		</dict>

        <key>InclusiveIdentifier</key>
        <dict>
            <key>match</key>
            <string>@</string>
            <key>captures</key>
            <dict>
                <key>0</key>
                <dict>
                    <key>name</key>
                    <string>inclusiveidentifier.powerquery</string>
                </dict>
            </dict>
        </dict>

        <key>Identifier</key>
        <dict>
            <key>match</key>
            <string>(?x:
                # look-behind; identifier must not follow an identifier-part-char or a dot
                (?&lt;![\._\p{Lu}\p{Ll}\p{Lt}\p{Lm}\p{Lo}\p{Nl}\p{Nd}\p{Pc}\p{Mn}\p{Mc}\p{Cf}])
                # Optional @ symbol
                (@?)

                # start of captured group
                (
                    # identifier-start-character
                    [_\p{Lu}\p{Ll}\p{Lt}\p{Lm}\p{Lo}\p{Nl}]
                    # 0-or-more identifier-part-characters
                    [_\p{Lu}\p{Ll}\p{Lt}\p{Lm}\p{Lo}\p{Nl}\p{Nd}\p{Pc}\p{Mn}\p{Mc}\p{Cf}]*
                    
                    # optionally followed by zero-or-more of this group
                    (?:
                        # dot
                        \.
                        # identifier-start-character
                        [_\p{Lu}\p{Ll}\p{Lt}\p{Lm}\p{Lo}\p{Nl}]
                        # 0-or-more identifier-part-characters
                        [_\p{Lu}\p{Ll}\p{Lt}\p{Lm}\p{Lo}\p{Nl}\p{Nd}\p{Pc}\p{Mn}\p{Mc}\p{Cf}]*
                    )*
                # end of captured group, and word boundary
                ) \b
            )</string>

            <key>captures</key>
            <dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>keyword.operator.inclusiveidentifier.powerquery</string>
                </dict>
                <key>2</key>
                <dict>
                    <key>name</key>
                    <string>entity.name.powerquery</string>
                </dict>
            </dict>
        </dict>

        <key>Operators</key>
        <dict>
			<key>match</key>
			<string>(=&gt;)|(=)|(|&lt;&gt;|&lt;|&gt;|&lt;=|&gt;=)|(&amp;)|(\+|-|\*|\/)|(!)|(\?)</string>
            <key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.function.powerquery</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.assignment-or-comparison.powerquery</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.comparison.powerquery</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.combination.powerquery</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.arithmetic.powerquery</string>
				</dict>
				<key>6</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.sectionaccess.powerquery</string>
				</dict>
				<key>7</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.optional.powerquery</string>
				</dict>
			</dict>
		</dict>

        <key>DotOperators</key>
        <dict>
			<key>match</key>
			<string>(?&lt;!\.)(?:(\.\.\.)|(\.\.))(?!\.)</string>
            <key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.ellipsis.powerquery</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.list.powerquery</string>
				</dict>
			</dict>
        </dict>

        <key>RecordExpression</key>
        <dict>
			<key>begin</key>
			<string>\[</string>
            <key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.brackets.begin.powerquery</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\]</string>
            <key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.brackets.end.powerquery</string>
				</dict>
			</dict>
            <key>patterns</key>
            <array>
                <dict>
                    <key>include</key>
                    <string>$self</string>
                </dict>
            </array>
            <key>contentName</key>
            <string>meta.recordexpression.powerquery</string>
        </dict>

        <key>Punctuation</key>
        <dict>
			<key>match</key>
			<string>(,)|(\()|(\))|({)|(})</string>
            <key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.separator.powerquery</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.parens.begin.powerquery</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.parens.end.powerquery</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.braces.begin.powerquery</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>punctuation.section.braces.end.powerquery</string>
				</dict>
			</dict>
        </dict>
				
        <key>ImplicitVariable</key>
		<dict>
			<key>match</key>
			<string>\b_\b</string>
			<key>name</key>
			<string>keyword.operator.implicitvariable.powerquery</string>
		</dict>

        <key>IntrinsicVariable</key>
		<dict>
			<key>match</key>
			<string>(?&lt;![\d\w])(#sections|#shared)\b</string>
			<key>captures</key>
			<dict>
                <key>1</key>
                <dict>
                    <key>name</key>
                    <string>constant.language.intrinsicvariable.powerquery</string>
                </dict>
            </dict>
		</dict>	

        <key>BuiltInFunctions</key>
        <dict>
            <key>patterns</key>
            <array>
                <dict>
                    <key>name</key>
                    <string>support.function.powerquery</string>
                    <key>match</key>
                    <string>(?x:\b(
  GoogleAnalytics.Accounts
| SapBusinessWarehouse.Cubes
| Binary.End
| Action.Sequence
| Action.Return
| Action.Try
| ValueAction.Replace
| ValueAction.NativeStatement
| TableAction.InsertRows
| TableAction.UpdateRows
| TableAction.DeleteRows
| WebAction.Request
| MQ.Queue
| Web.Page
| Delta.Since
| Value.ResourceExpression
| Resource.Access
| List.NonNullCount
| List.MatchesAll
| List.MatchesAny
| List.Range
| List.RemoveItems
| List.ReplaceValue
| List.FindText
| List.RemoveLastN
| List.RemoveFirstN
| Table.ColumnCount
| Table.AlternateRows
| Table.InsertRows
| Table.LastN
| Table.Last
| Table.MatchesAllRows
| Table.MatchesAnyRows
| Table.Partition
| Table.Range
| Table.RemoveRows
| Table.Repeat
| Table.ReplaceRows
| Table.ReverseRows
| Table.HasColumns
| Table.PrefixColumns
| Table.ColumnsOfType
| Table.AddColumn
| Table.DuplicateColumn
| Table.FillUp
| Table.RemoveLastN
| Table.RemoveFirstN
| Table.ExpandListColumn
| Table.ExpandTableColumn
| Table.TransformRows
| Table.Transpose
| Table.DemoteHeaders
| Table.ToRows
| Table.ToColumns
| Table.Contains
| Table.ContainsAll
| Table.ContainsAny
| Table.IsDistinct
| Table.PositionOf
| Table.PositionOfAny
| Table.RemoveMatchingRows
| Table.ReplaceMatchingRows
| Table.Max
| Table.MaxN
| Table.Min
| Table.MinN
| Table.Buffer
| Table.FindText
| Replacer.ReplaceValue
| Replacer.ReplaceText
| Table.ReplaceValue
| Table.IsEmpty
| Table.SplitColumn
| Table.CombineColumns
| Table.FirstValue
| Table.View
| Table.Schema
| Type.TableSchema
| Table.Profile
| Text.Format
| Text.AfterDelimiter
| Text.BeforeDelimiter
| Text.BetweenDelimiters
| Date.IsInPreviousDay
| Date.IsInPreviousNDays
| Date.IsInCurrentDay
| Date.IsInNextDay
| Date.IsInNextNDays
| Date.IsInPreviousWeek
| Date.IsInPreviousNWeeks
| Date.IsInCurrentWeek
| Date.IsInNextWeek
| Date.IsInNextNWeeks
| Date.IsInPreviousMonth
| Date.IsInPreviousNMonths
| Date.IsInCurrentMonth
| Date.IsInNextMonth
| Date.IsInNextNMonths
| Date.IsInPreviousQuarter
| Date.IsInPreviousNQuarters
| Date.IsInCurrentQuarter
| Date.IsInNextQuarter
| Date.IsInNextNQuarters
| Date.IsInPreviousYear
| Date.IsInPreviousNYears
| Date.IsInCurrentYear
| Date.IsInNextYear
| Date.IsInNextNYears
| Date.IsInYearToDate
| DateTime.IsInPreviousSecond
| DateTime.IsInPreviousNSeconds
| DateTime.IsInNextSecond
| DateTime.IsInNextNSeconds
| DateTime.IsInCurrentSecond
| DateTime.IsInPreviousMinute
| DateTime.IsInPreviousNMinutes
| DateTime.IsInNextMinute
| DateTime.IsInNextNMinutes
| DateTime.IsInCurrentMinute
| DateTime.IsInPreviousHour
| DateTime.IsInPreviousNHours
| DateTime.IsInNextHour
| DateTime.IsInNextNHours
| DateTime.IsInCurrentHour
| Date.MonthName
| Date.DayOfWeekName
| SqlExpression.SchemaFrom
| DirectQueryCapabilities.From
| List.Count
| List.Distinct
| List.FirstN
| List.IsEmpty
| List.LastN
| List.Select
| List.Skip
| List.Sort
| List.Transform
| List.TransformMany
| Expression.Constant
| Expression.Evaluate
| Expression.Identifier
| Duration.FromText
| Duration.From
| Duration.ToText
| Duration.ToRecord
| Duration.Days
| Duration.Hours
| Duration.Minutes
| Duration.Seconds
| Duration.TotalDays
| Duration.TotalHours
| Duration.TotalMinutes
| Duration.TotalSeconds
| Record.AddField
| Record.Field
| Record.FieldCount
| Record.FieldNames
| Record.FieldOrDefault
| Record.FieldValues
| Record.FromTable
| Record.HasFields
| Record.RemoveFields
| Record.RenameFields
| Record.ReorderFields
| Record.SelectFields
| Record.ToTable
| Record.TransformFields
| Record.Combine
| Record.FromList
| Record.ToList
| Number.From
| Number.FromText
| Number.ToText
| Number.IsNaN
| Number.BitwiseNot
| Number.BitwiseOr
| Number.BitwiseAnd
| Number.BitwiseXor
| Number.BitwiseShiftLeft
| Number.BitwiseShiftRight
| Binary.ToText
| Binary.From
| Binary.FromText
| Binary.ToList
| Binary.FromList
| Binary.Combine
| Binary.Length
| Binary.Buffer
| Binary.Compress
| Binary.Decompress
| Character.FromNumber
| Character.ToNumber
| Text.At
| Text.From
| Text.Length
| Text.Range
| Text.Middle
| Text.Start
| Text.End
| Text.StartsWith
| Text.EndsWith
| Text.Contains
| Text.Clean
| Text.PositionOf
| Text.PositionOfAny
| Text.Lower
| Text.Upper
| Text.Proper
| Text.Split
| Text.SplitAny
| Text.Combine
| Text.Repeat
| Text.Replace
| Text.ReplaceRange
| Text.Insert
| Text.Remove
| Text.RemoveRange
| Text.Trim
| Text.TrimStart
| Text.TrimEnd
| Text.PadStart
| Text.PadEnd
| Text.ToBinary
| Text.ToList
| Text.FromBinary
| Text.NewGuid
| Comparer.FromCulture
| Comparer.Ordinal
| Comparer.OrdinalIgnoreCase
| Comparer.Equals
| Date.FromText
| Date.From
| Date.ToText
| Date.ToRecord
| Date.Year
| Date.Month
| Date.Day
| Date.AddDays
| Date.AddWeeks
| Date.AddMonths
| Date.AddQuarters
| Date.AddYears
| Date.IsLeapYear
| Date.StartOfYear
| Date.StartOfQuarter
| Date.StartOfMonth
| Date.StartOfWeek
| Date.StartOfDay
| Date.EndOfYear
| Date.EndOfQuarter
| Date.EndOfMonth
| Date.EndOfWeek
| Date.EndOfDay
| Date.DayOfWeek
| Date.DayOfYear
| Date.DaysInMonth
| Date.QuarterOfYear
| Date.WeekOfMonth
| Date.WeekOfYear
| DateTime.FromText
| DateTime.From
| DateTime.ToText
| DateTime.ToRecord
| DateTime.Date
| DateTime.Time
| DateTime.AddZone
| DateTime.LocalNow
| DateTime.FixedLocalNow
| DateTime.FromFileTime
| DateTimeZone.FromText
| DateTimeZone.From
| DateTimeZone.ToText
| DateTimeZone.ToRecord
| DateTimeZone.ZoneHours
| DateTimeZone.ZoneMinutes
| DateTimeZone.LocalNow
| DateTimeZone.UtcNow
| DateTimeZone.FixedLocalNow
| DateTimeZone.FixedUtcNow
| DateTimeZone.ToLocal
| DateTimeZone.ToUtc
| DateTimeZone.SwitchZone
| DateTimeZone.RemoveZone
| DateTimeZone.FromFileTime
| Time.FromText
| Time.From
| Time.ToText
| Time.ToRecord
| Time.Hour
| Time.Minute
| Time.Second
| Time.StartOfHour
| Time.EndOfHour
| Function.Invoke
| Function.InvokeAfter
| Function.IsDataSource
| Number.Abs
| Number.Acos
| Number.Asin
| Number.Atan
| Number.Atan2
| Number.Combinations
| Number.Cos
| Number.Cosh
| Number.Exp
| Number.Factorial
| Number.IntegerDivide
| Number.Log
| Number.Log10
| Number.Ln
| Number.Mod
| Number.Permutations
| Number.Power
| Number.Random
| Number.RandomBetween
| Number.Round
| Number.RoundDown
| Number.RoundUp
| Number.RoundTowardZero
| Number.RoundAwayFromZero
| Number.Sign
| Number.Sin
| Number.Sinh
| Number.Sqrt
| Number.Tan
| Number.Tanh
| Number.IsEven
| Number.IsOdd
| List.Contains
| List.Difference
| List.First
| List.Generate
| List.Intersect
| List.IsDistinct
| List.Last
| List.RemoveMatchingItems
| List.RemoveNulls
| List.Repeat
| List.ReplaceMatchingItems
| List.Reverse
| List.Single
| List.SingleOrDefault
| List.Union
| List.Accumulate
| List.Buffer
| List.Combine
| List.ContainsAll
| List.ContainsAny
| List.InsertRange
| List.Max
| List.MaxN
| List.Min
| List.MinN
| List.PositionOf
| List.PositionOfAny
| List.Positions
| List.RemoveRange
| List.ReplaceRange
| List.Alternate
| List.Zip
| List.Average
| List.Covariance
| List.Median
| List.Mode
| List.Modes
| List.Product
| List.Sum
| List.StandardDeviation
| List.Numbers
| List.Times
| List.Dates
| List.DateTimes
| List.DateTimeZones
| List.Durations
| List.Random
| Error.Record
| Value.Equals
| Value.NullableEquals
| Value.Compare
| Value.Type
| Value.ReplaceType
| Value.RemoveMetadata
| Value.ReplaceMetadata
| Value.Metadata
| Value.FromText
| Value.Add
| Value.Subtract
| Value.Multiply
| Value.Divide
| Value.As
| Value.Is
| Value.NativeQuery
| Type.ForRecord
| Type.ForFunction
| Type.NonNullable
| Type.IsNullable
| Type.ListItem
| Type.OpenRecord
| Type.ClosedRecord
| Type.IsOpenRecord
| Type.RecordFields
| Type.FunctionParameters
| Type.FunctionRequiredParameters
| Type.FunctionReturn
| Type.Is
| Type.Union
| Type.Facets
| Type.ReplaceFacets
| Logical.FromText
| Logical.From
| Logical.ToText
| List.AllTrue
| List.AnyTrue
| Byte.From
| Int8.From
| Int16.From
| Int32.From
| Int64.From
| Single.From
| Double.From
| Decimal.From
| Currency.From
| Percentage.From
| Value.Firewall
| Access.Database
| ActiveDirectory.Domains
| Cube.DisplayFolders
| Cube.Dimensions
| Cube.Measures
| Cube.Transform
| Cube.AddMeasureColumn
| Cube.AddAndExpandDimensionColumn
| Cube.CollapseAndRemoveColumns
| Cube.AttributeMemberId
| Marketplace.Subscriptions
| Diagnostics.Trace
| Diagnostics.ActivityId
| DB2.Database
| Informix.Database
| Excel.Workbook
| Excel.CurrentWorkbook
| Exchange.Contents
| Facebook.Graph
| File.Contents
| Folder.Contents
| Folder.Files
| Hdfs.Contents
| Hdfs.Files
| Json.Document
| Json.FromValue
| Table.FromValue
| Csv.Document
| Lines.FromText
| Lines.FromBinary
| Lines.ToText
| Lines.ToBinary
| Table.FromList
| Table.ToList
| Splitter.SplitByNothing
| Splitter.SplitTextByDelimiter
| Splitter.SplitTextByRanges
| Splitter.SplitTextByWhitespace
| Splitter.SplitTextByEachDelimiter
| Splitter.SplitTextByAnyDelimiter
| Splitter.SplitTextByPositions
| Splitter.SplitTextByRepeatedLengths
| Splitter.SplitTextByLengths
| Combiner.CombineTextByDelimiter
| Combiner.CombineTextByEachDelimiter
| Combiner.CombineTextByRanges
| Combiner.CombineTextByPositions
| Combiner.CombineTextByLengths
| MySQL.Database
| OData.Feed
| Oracle.Database
| Embedded.Value
| Variable.Value
| BinaryFormat.SignedInteger16
| BinaryFormat.SignedInteger32
| BinaryFormat.SignedInteger64
| BinaryFormat.UnsignedInteger16
| BinaryFormat.UnsignedInteger32
| BinaryFormat.UnsignedInteger64
| BinaryFormat.Single
| BinaryFormat.Double
| BinaryFormat.Decimal
| BinaryFormat.7BitEncodedUnsignedInteger
| BinaryFormat.7BitEncodedSignedInteger
| BinaryFormat.Byte
| BinaryFormat.Binary
| BinaryFormat.Record
| BinaryFormat.List
| BinaryFormat.Text
| BinaryFormat.Transform
| BinaryFormat.Length
| BinaryFormat.Choice
| BinaryFormat.ByteOrder
| BinaryFormat.Group
| BinaryFormat.Null
| PostgreSQL.Database
| SharePoint.Contents
| SharePoint.Files
| SharePoint.Tables
| Sql.Database
| Sql.Databases
| Sybase.Database
| Table.ColumnNames
| Tables.GetRelationships
| Table.FromColumns
| Table.FromPartitions
| Table.PartitionValues
| Table.FromRows
| Table.PromoteHeaders
| Table.RowCount
| Table.ToRecords
| Table.FromRecords
| Table.Keys
| Table.AddKey
| Table.ReplaceKeys
| Type.TableColumn
| Type.TableRow
| Type.TableKeys
| Type.AddTableKey
| Type.ReplaceTableKeys
| Table.Column
| Table.SelectColumns
| Table.SelectRows
| Table.RenameColumns
| Table.TransformColumnNames
| Table.ReorderColumns
| Table.Skip
| Table.First
| Table.FirstN
| Table.RemoveColumns
| Table.Group
| Table.Join
| Table.AddJoinColumn
| Table.NestedJoin
| Table.AddIndexColumn
| Table.FillDown
| Table.TransformColumns
| Table.TransformColumnTypes
| Table.Sort
| Table.Distinct
| Table.ExpandRecordColumn
| Table.AggregateTableColumn
| Table.SingleRow
| Table.Combine
| Table.Pivot
| Table.Unpivot
| Table.UnpivotOtherColumns
| Table.SelectRowsWithErrors
| Table.RemoveRowsWithErrors
| Table.ReplaceErrorValues
| Table.ReplaceRelationshipIdentity
| Table.FilterWithDataTable
| RowExpression.From
| RowExpression.Column
| Teradata.Database
| Uri.Combine
| Uri.Parts
| Uri.BuildQueryString
| Uri.EscapeDataString
| Web.Contents
| Soda.Feed
| Xml.Document
| Xml.Tables
| HdInsight.Files
| HdInsight.Contents
| HdInsight.Containers
| AzureStorage.Blobs
| AzureStorage.Tables
| Salesforce.Data
| Salesforce.Reports
| AnalysisServices.Databases
| AnalysisServices.Database
| Odbc.Query
| Odbc.DataSource
| OleDb.Query
| OleDb.DataSource
| AdoDotNet.Query
| AdoDotNet.DataSource
| RData.FromBinary
| SqlExpression.ToExpression
| SapHana.Database
| Cube.Parameters
| Cube.ApplyParameter
| Crypto.CreateHash                 
| Crypto.CreateHmac   
| Error.Unexpected                  
| Extension.Contents                
| Extension.CredentialError         
| Extension.CurrentApplication      
| Extension.CurrentCredential       
| Extension.LoadString              
| Extension.Module  
| Percentage.From                   
| Web.SignForOAuth1  
                    )\b)</string>
                </dict>

                <dict>
                    <key>name</key>
                    <string>support.constant.powerquery</string>
                    <key>match</key>
                    <string>(?x:\b(
  Action.Type
| Any.Type
| Binary.Type
| BinaryEncoding.Base64
| BinaryEncoding.Hex
| BinaryEncoding.Type
| BinaryOccurrence.Optional
| BinaryOccurrence.Repeating
| BinaryOccurrence.Required
| BinaryOccurrence.Type
| Byte.Type
| ByteOrder.BigEndian
| ByteOrder.LittleEndian
| ByteOrder.Type
| Character.Type
| Compression.Deflate
| Compression.GZip
| Compression.Type
| CsvStyle.QuoteAfterDelimiter
| CsvStyle.QuoteAlways
| CsvStyle.Type
| Culture.Current
| Currency.Type
| Date.Type
| DateTime.Type
| DateTimeZone.Type
| Day.Friday
| Day.Monday
| Day.Saturday
| Day.Sunday
| Day.Thursday
| Day.Tuesday
| Day.Type
| Day.Wednesday
| Decimal.Type
| Double.Type
| Duration.Type
| ExtraValues.Error
| ExtraValues.Ignore
| ExtraValues.List
| ExtraValues.Type
| Function.Type
| GroupKind.Global
| GroupKind.Local
| GroupKind.Type
| Int16.Type
| Int32.Type
| Int64.Type
| Int8.Type
| JoinAlgorithm.Dynamic
| JoinAlgorithm.LeftHash
| JoinAlgorithm.LeftIndex
| JoinAlgorithm.PairwiseHash
| JoinAlgorithm.RightHash
| JoinAlgorithm.RightIndex
| JoinAlgorithm.SortMerge
| JoinAlgorithm.Type
| JoinKind.FullOuter
| JoinKind.Inner
| JoinKind.LeftAnti
| JoinKind.LeftOuter
| JoinKind.RightAnti
| JoinKind.RightOuter
| JoinKind.Type
| List.Type
| Logical.Type
| MissingField.Error
| MissingField.Ignore
| MissingField.Type
| MissingField.UseNull
| None.Type
| Null.Type
| Number.E
| Number.Epsilon
| Number.NaN
| Number.NegativeInfinity
| Number.PI
| Number.PositiveInfinity
| Number.Type
| Occurrence.All
| Occurrence.First
| Occurrence.Last
| Occurrence.Optional
| Occurrence.Repeating
| Occurrence.Required
| Occurrence.Type
| Order.Ascending
| Order.Descending
| Order.Type
| Percentage.Type
| Precision.Decimal
| Precision.Double
| Precision.Type
| QuoteStyle.Csv
| QuoteStyle.None
| QuoteStyle.Type
| Record.Type
| RelativePosition.FromEnd
| RelativePosition.FromStart
| RelativePosition.Type
| RoundingMode.AwayFromZero
| RoundingMode.Down
| RoundingMode.ToEven
| RoundingMode.TowardZero
| RoundingMode.Type
| RoundingMode.Up
| RowExpression.Row
| SapHanaRangeOperator.Equals
| SapHanaRangeOperator.GreaterThan
| SapHanaRangeOperator.GreaterThanOrEquals
| SapHanaRangeOperator.LessThan
| SapHanaRangeOperator.LessThanOrEquals
| SapHanaRangeOperator.NotEquals
| SapHanaRangeOperator.Type
| Single.Type
| Table.Type
| Text.Type
| TextEncoding.Ascii
| TextEncoding.BigEndianUnicode
| TextEncoding.Type
| TextEncoding.Unicode
| TextEncoding.Utf16
| TextEncoding.Utf8
| TextEncoding.Windows
| Time.Type
| TraceLevel.Critical
| TraceLevel.Error
| TraceLevel.Information
| TraceLevel.Type
| TraceLevel.Verbose
| TraceLevel.Warning
| Type.Type
| WebMethod.Delete
| WebMethod.Get
| WebMethod.Head
| WebMethod.Patch
| WebMethod.Post
| WebMethod.Put
| WebMethod.Type
| Credential.AccessDenied           
| Credential.AccessForbidden        
| Credential.EncryptionNotSupported 
| Credential.NativeQueryPermission  
| CryptoAlgorithm.SHA1              
| CryptoAlgorithm.SHA256            
| CryptoAlgorithm.Type  
| Percentage.Type                
| OAuth1.HMACSHA1                   
| OAuth1.RSASHA1                    
| OAuth1.Type 
                    )\b)</string>
                </dict> 
            </array>
        </dict>

	</dict>
</dict>
</plist>
